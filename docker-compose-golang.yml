# 网络配置
networks:
  default:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/www
      - ./services/nginx/ssl:/ssl
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/fastcgi-php.conf:/etc/nginx/fastcgi-php.conf
      - ./services/nginx/fastcgi_params:/etc/nginx/fastcgi_params
      - ./logs/nginx:/var/log/nginx
    restart: always
    networks:
      - default
 
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  postgresql:
    image: postgres:16-alpine
    container_name: postgresql
    ports:
      - "${PGSQL_PORT}:5432"
    volumes:
      - ${PGSQL_DATA_DIR}:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      TZ: Asia/Shanghai
      PGTZ: Asia/Shanghai
    networks:
      - default
      
  etcd:                                 
    build:
      context: ./services/etcd                  
    container_name: etcd
    restart: always
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_LISTEN_CLIENT_URLS=${ETCD_LISTEN_CLIENT_URLS}         
      - ETCD_ADVERTISE_CLIENT_URLS=${ETCD_ADVERTISE_CLIENT_URLS}       
    ports:                             
      - "${ETCD_PORT}:2379"
    networks:
      - default  
    
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    command: server --console-address ":9001" /data 
    ports:
      - 9000:9000
      - 9001:9001 
    volumes:
      - ./data/minio:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123456
    networks:
      - default
    
  dtm:
    build:
      context: ./services/dtm
    container_name: dtm
    restart: always
    environment:
      - TZ=${TZ}
    entrypoint:
      - "/app/dtm/dtm"
      - "-c=/app/dtm/configs/config.yaml"
    volumes:
      - ./services/dtm/config.yml:/app/dtm/configs/config.yaml # 将 dtm 配置文件挂载到容器里
    ports:
      - "${DTM_HTTP_PORT}:36789"
      - "${DTM_GRPC_PORT}:36790"
    networks:
      - default

  prometheus:
    build:
      context: ./services/prometheus
    container_name: prometheus
    restart: always
    environment:
      - TZ=${TZ}
    volumes:
      - ./services/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml  # 将 prometheus 配置文件挂载到容器里
    ports:
      - "${PROMETHEUS_PORT}:9090"                     # 设置容器9090端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - default

  beanstalkd:
    image: schickling/beanstalkd
    container_name: beanstalkd
    environment:
      - TZ=${TZ}
    ports:
      - "${BEANSTALKD_PORT}:11300"                     # 设置容器16686端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - default

  jaeger:
    build:
      context: ./services/jaeger
    container_name: jaeger
    restart: always
    environment:
      - TZ=${TZ}
    ports:
      - "${JAEGER_PORT}:16686"                        # 设置容器16686端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - default

  grafana:
    build:
      context: ./services/grafana
    container_name: grafana
    environment:
      - TZ=${TZ}
    ports:
      - "${GRAFANA_PORT}:3000"                        # 设置容器3000端口映射指定宿主机端口，用于宿主机访问可视化web
    networks:
      - default